{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,aAAa,MAAM,iBAAiB,CAAC;AAE5C,kEAAkE;AAClE,+CAA+C;AAC/C,IAAI,uBAAuB,GAAG,CAAC,CAAC;AAChC,MAAM,gBAAgB,GAAG,yBAAyB,CAAC;AAEnD,MAAM,CAAC,OAAO,OAAO,SAAU,SAAQ,KAAK,CAAC,aAAa;IAWxD,iBAAiB;QACf,OAAO,CAAC,IAAI,CAAC,6GAA6G,CAAC,CAAC;QAC5H,uBAAuB,EAAE,CAAC;QAC1B,IAAI,uBAAuB,KAAK,CAAC,EAAE;YACjC,iBAAiB,EAAE,CAAC;SACrB;IACH,CAAC;IAED,oBAAoB;QAClB,uBAAuB,EAAE,CAAC;QAC1B,IAAI,uBAAuB,KAAK,CAAC,EAAE;YACjC,mBAAmB,EAAE,CAAC;SACvB;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC;IACd,CAAC;;AA3BM,kBAAQ,GAAG,CAAC,GAAY,EAAQ,EAAE;IACvC,OAAO,CAAC,IAAI,CAAC,qKAAqK,CAAC,CAAC;IACpL,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC,CAAC;AAEK,oBAAU,GAAG,CAAC,GAAY,EAAQ,EAAE;IACzC,OAAO,CAAC,IAAI,CAAC,yKAAyK,CAAC,CAAC;IACxL,mBAAmB,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC,CAAC;AAsBJ,MAAM,UAAU,YAAY,CAAC,MAAc,gBAAgB;IACzD,SAAS,CAAC,GAAG,EAAE;QACb,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,GAAG,EAAE,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,MAAc,gBAAgB;IAC9D,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,MAAc,gBAAgB;IAChE,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,GAAY;IACnC,OAAO,CAAC,IAAI,CACV,mHAAmH,CACpH,CAAC;IACF,iBAAiB,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,GAAY;IACrC,OAAO,CAAC,IAAI,CACV,uHAAuH,CACxH,CAAC;IACF,mBAAmB,CAAC,GAAG,CAAC,CAAC;AAC3B,CAAC","sourcesContent":["import React, { useEffect } from 'react';\nimport ExpoKeepAwake from './ExpoKeepAwake';\n\n// NOTE(brentvatne): in tests this value won't be reset because we\n// can render a component and never unmount it.\nlet __keepAwakeMountedCount = 0;\nconst ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\n\nexport default class KeepAwake extends React.PureComponent {\n  static activate = (tag?: string): void => {\n    console.warn(`The \"KeepAwake.activate\" static method has been deprecated in favor of the \"activateKeepAwake\" function exported from expo-keep-awake and will be removed in SDK 35`);\n    activateKeepAwake(tag);\n  };\n\n  static deactivate = (tag?: string): void => {\n    console.warn(`The \"KeepAwake.deactivate\" static method has been deprecated in favor of the \"deactivateKeepAwake\" function exported from expo-keep-awake and will be removed in SDK 35`);\n    deactivateKeepAwake(tag);\n  };\n\n  componentDidMount() {\n    console.warn(`The KeepAwake component has been deprecated in favor of the useKeepAwake hook and will be removed in SDK 35`);\n    __keepAwakeMountedCount++;\n    if (__keepAwakeMountedCount === 1) {\n      activateKeepAwake();\n    }\n  }\n\n  componentWillUnmount() {\n    __keepAwakeMountedCount--;\n    if (__keepAwakeMountedCount === 0) {\n      deactivateKeepAwake();\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport function useKeepAwake(tag: string = ExpoKeepAwakeTag): void {\n  useEffect(() => {\n    activateKeepAwake(tag);\n    return () => deactivateKeepAwake(tag);\n  }, [tag]);\n}\n\nexport function activateKeepAwake(tag: string = ExpoKeepAwakeTag): void {\n  ExpoKeepAwake.activate(tag);\n}\n\nexport function deactivateKeepAwake(tag: string = ExpoKeepAwakeTag): void {\n  ExpoKeepAwake.deactivate(tag);\n}\n\nexport function activate(tag?: string): void {\n  console.warn(\n    `\"activate\" from expo-keep-awake has been deprecated in favor of \"activateKeepAwake\" and will be removed in SDK 35`\n  );\n  activateKeepAwake(tag);\n}\n\nexport function deactivate(tag?: string): void {\n  console.warn(\n    `\"deactivate\" from expo-keep-awake has been deprecated in favor of \"deactivateKeepAwake\" and will be removed in SDK 35`\n  );\n  deactivateKeepAwake(tag);\n}\n"]}